version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

services:

### Workspace Utilities ##################################
    workspace:
      hostname: workspace
      build:
        context: ./workspace
        args:
          - NODE_VERSION=${WORKSPACE_NODE_VERSION}
          - TZ=${WORKSPACE_TIMEZONE}
          - PHP_VERSION=${PHP_VERSION}

      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      tty: true
      networks:
        - frontend
        - backend

### PHP-FPM ##############################################
    php-fpm:
      hostname: php-fpm
      build:
        context: ./php-fpm
        args:
          - PHP_VERSION=${PHP_VERSION}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      networks:
        - backend

### NGINX Server #########################################
    nginx:
      hostname: nginx
      build:
        context: ./nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### MySQL ################################################
    mysql:
      hostname: mysql
      build:
        context: ./mysql
        args:
          - TZ=${WORKSPACE_TIMEZONE}
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - backend

### Redis ################################################
    redis:
      hostname: redis
      build: ./redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend

### PORTAINER ###
### phpMyAdmin ###########################################
    phpmyadmin:
      build: ./phpmyadmin
      environment:
        - PMA_ARBITRARY=1
        - MYSQL_USER=${PMA_USER}
        - MYSQL_PASSWORD=${PMA_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
      ports:
        - "${PMA_PORT}:80"
      depends_on:
        - "${PMA_DB_ENGINE}"
      ### volumes:
      ### volumes:
        ### - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        ### - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        ### - ../sites/:/etc/nginx/sites-available
      ### - /sessions	         - /sessions
        ### - ~/docker/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php	         - ~/docker/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
        ### - ./phpmyadmin/themes/:/www/themes/theme/
      networks:
        - frontend
        - backend

### Portainer ################################################
    portainer:
      hostname: portainer
      build:
        context: ./portainer
      volumes:
        - ${DATA_PATH_HOST}/portainer_data:/data
        - /var/run/docker.sock:/var/run/docker.sock
      ports:
        - "${PORTAINER_PORT}:9000"


